Exception Handling in Springboot
------------------------------------------

Create a Product class 
--------------------------------
package com.allstate.first.entity;

public class Product {

	private int id;
	private String name;
	private double price;
	public Product() {}
	public Product(int id, String name, double price) {
		super();
		this.id = id;
		this.name = name;
		this.price = price;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	
}

_________________________________________________________________

Create a controller to Get the product

package com.allstate.first;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.allstate.first.entity.Product;
import com.allstate.first.entity.ProductNotfoundException;

@RestController
public class MainController {

	@RequestMapping("/hello")
	public String hello() {
		return "Welcome from my springboot app";
	}
	@RequestMapping("/product")
	public Product getProduct() {
		return new Product(1, "pencil", 10.20);
	}
}

Save and Run your application and check

localhost:8081/product

you can see the product object in the form JSON (java script Object notation)

------------------------------------------------------------------------------

Let's try to get the Product By Id

@RequestMapping("/product/{id}")
	public Product getProductById(@PathVariable int id) throws ProductNotfoundException{
		return new Product(id, "pencil", 10.20);
	}

so if your send the api call

localhost:8081/product/1
localhost:8081/product/4
localhost:8081/product/7

Now if the product Id is 0 wants to throw an exception.

Let's create an exception class.

package com.allstate.first.entity;

public class ProductNotfoundException extends Exception{

	public ProductNotfoundException(String msg) {
		super(msg);
	}
}

-----------------------------------------------------------------

update the method in controller

@RequestMapping("/product/{id}")
	public Product getProductById(@PathVariable int id) throws ProductNotfoundException{
		if(id==0)
			throw new ProductNotfoundException("No product Available");
		return new Product(id, "pencil", 10.20);
	}

---------------------------------------------------------------------

check the api call

localhost:8081/product/0

will give a whitelabel error.

to Handle all kind of exception let's creat Handler.

package com.allstate.first;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

import com.allstate.first.entity.ProductNotfoundException;

@ControllerAdvice // at class level
public class ProductExceptioncontroller {

	//annotation used at method level
	@ExceptionHandler(value=ProductNotfoundException.class)
	public ResponseEntity<Object> handleException(ProductNotfoundException e) {
		return new ResponseEntity<>("Product  Not Available ",HttpStatus.NOT_FOUND);
	}
}

------------------------------------------------------------------------

Again check localhost:8081/product/0

you can see the proper error message

if you want to check HttpStatus as well then Open postman tool and check once.